<?xml version="1.0" encoding="UTF-8"?>
<!--
	File created by Christian Schneider <chrschn@sec.in.tum.de>
-->
<typeknowledge version="1">
	<rules>
		<!--
		Reference: http://lxr.linux.no/#linux+v2.6.32.58/fs/sysfs/sysfs.h#L42
		-->
		<rule priority="101">
			<name>sysfs_dirent.{s_dir,s_symlink,s_attr,s_bin_attr}</name>
			<description>Resolve sysfs entry type in union</description>
			<filter>
				<datatype>struct</datatype>
				<typename>sysfs_dirent</typename>
				<members>
					<member></member>
					<member match="any" />
				</members>
			</filter>
			<action type="inline">
				var dirent = arguments[0];
				var members = arguments[1];
				var flags = dirent.s_flags.toUInt32();
				var elem = dirent.Member(members[0]).Member(members[1]);

				// Types as defined in &lt;fs/sysfs/sysfs.h&gt;
				var sysfs_types = new Object({
					s_dir:      0x1,
					s_attr:     0x2,
					s_bin_attr: 0x4,
					s_symlink:  0x8
				});

				// If flag is set corresponding to name, the instance is valid
				if (flags &amp; sysfs_types[elem.Name()])
					return false;
				else
					return new Instance();
			</action>
		</rule>
		
		<rule priority="101">
			<name>sysfs_dirent.s_sibling</name>
			<description>
				Override any generated rule for member "s_sibling" and use the 
				defined type.
			</description>
			<filter>
				<datatype>struct</datatype>
				<typename>sysfs_dirent</typename>
				<members>
					<member>s_sibling</member>
				</members>
			</filter>
			<action type="inline">
				return false;
			</action>
		</rule>
	</rules>
</typeknowledge>
